<?xml version="1.0" encoding="UTF-8"?>
<beans
    xsi:schemaLocation=" http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd     
  http://www.springframework.org/schema/integration
  http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
  http://www.springframework.org/schema/batch 
  http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
  "
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:batch="http://www.springframework.org/schema/batch" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:si="http://www.springframework.org/schema/integration" 
    xmlns="http://www.springframework.org/schema/beans"
    default-autowire="byName">

<!--
  <bean abstract="true" id="workflowSamplePoller" class="edu.yu.einstein.wasp.batch.WorkflowSamplePoller" />

  <bean id="chipSeqDnaSamplePoller" parent="workflowSamplePoller">
    <property name="subtypeSampleIName" value="chipseqDnaSample"/>
    <property name="taskIName" value="sampleWrapTask"/>
  </bean>

  <si:inbound-channel-adapter ref="chipSeqDnaSamplePoller" method="getStates" channel="chipSeqDnaSampleChannel">
    <si:poller>
      <si:interval-trigger interval="20000" />
    </si:poller>
  </si:inbound-channel-adapter>

  <si:service-activator input-channel="chipSeqDnaSampleChannel" output-channel="logger">
    <bean class="edu.yu.einstein.wasp.batch.StateJobLaunchingMessageHandler" scope="prototype">
       <constructor-arg ref="jobRegistry" />
       <constructor-arg ref="jobLauncher" />
       <constructor-arg ref="jobRepository" />
       <constructor-arg ref="jobOperator" />
       <constructor-arg type="java.lang.String"><value>chipSeqStartSample</value></constructor-arg>
    </bean>
  </si:service-activator>

  <bean id="receiveSampleStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.CreateSampleStateProcessor">
        <property name="targetTask" value="Receive Sample" />
      </bean>
    </property>
  </bean>

  <bean id="waitForReceiveSampleStateUpdated" parent="parentStateStep">
    <property name="allowStartIfComplete" value="true" />
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.WaitForSiblingSampleStateProcessor">
        <property name="task" value="Receive Sample" />
        <property name="status" value="RECEIVED" />
        <property name="siblingTargetStatus" value="FINAL" />
      </bean>
    </property>
  </bean>

  <bean id="waitForInvoiceJobStateUpdated" parent="parentStateStep">
    <property name="allowStartIfComplete" value="true" />
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.WaitForSiblingJobStateProcessor">
        <property name="task" value="Send Invoice" />
        <property name="status" value="FINAL" />
      </bean>
    </property>
  </bean>

  <bean id="createLibrarySampleStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.CreateSampleStateProcessor">
        <property name="targetTask" value="Create Library" />
      </bean>
    </property>
  </bean>

  <bean id="waitForCreateLibraryStateUpdated" parent="parentStateStep">
    <property name="allowStartIfComplete" value="true" />
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.WaitForSiblingSampleStateProcessor">
        <property name="task" value="Create Library" />
        <property name="status" value="MADE" />
        <property name="siblingTargetStatus" value="FINAL" />
      </bean>
    </property>
  </bean>

  <batch:job id="chipSeqStartSample">
    <batch:step id="chipSeqDna.receiveSample" parent="receiveSampleStateStep" next="chipSeqDna.waitForReceiveSample" />
    <batch:step id="chipSeqDna.waitForReceiveSample" parent="waitForReceiveSampleStateUpdated" next="chipSeqDna.createLibrary" />

    <batch:step id="chipSeqDna.createLibrary" parent="createLibrarySampleStateStep" next="chipSeqDna.waitForCreateLibrary" />
    <batch:step id="chipSeqDna.waitForCreateLibrary" parent="waitForCreateLibraryStateUpdated" next="chipSeqDna.finishFlow" />

    <batch:flow id="chipSeqDna.finishFlow" parent="finishJobFlow" />
  </batch:job>
-->

</beans>
