<?xml version="1.0" encoding="UTF-8"?>
<beans
    xsi:schemaLocation=" http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd     
  http://www.springframework.org/schema/integration
  http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
  http://www.springframework.org/schema/batch 
  http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
  "
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:batch="http://www.springframework.org/schema/batch" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:si="http://www.springframework.org/schema/integration" 
    xmlns="http://www.springframework.org/schema/beans"
    default-autowire="byName">

  <bean abstract="true" id="workflowSamplePoller" class="edu.yu.einstein.wasp.batch.WorkflowSamplePoller" />

  <bean id="chipSeqDnaSamplePoller" parent="workflowSamplePoller">
    <property name="subtypeSampleIName" value="chipseqDnaSample"/>
    <property name="taskIName" value="sampleWrapTask"/>
  </bean>

  <si:inbound-channel-adapter ref="chipSeqDnaSamplePoller" method="getStates" channel="chipSeqDnaSampleChannel">
    <si:poller>
      <si:interval-trigger interval="20000" />
    </si:poller>
  </si:inbound-channel-adapter>

  <si:service-activator input-channel="chipSeqDnaSampleChannel" output-channel="logger">
    <bean class="edu.yu.einstein.wasp.batch.StateJobLaunchingMessageHandler" scope="prototype">
       <constructor-arg ref="jobRegistry" />
       <constructor-arg ref="jobLauncher" />
       <constructor-arg ref="jobRepository" />
       <constructor-arg ref="jobOperator" />
       <constructor-arg type="java.lang.String"><value>chipSeqDna.workflow</value></constructor-arg>
    </bean>
  </si:service-activator>


  <!-- sampleReceived -->

  <bean id="wasp.sample.receiveSampleStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.CreateSampleStateProcessor">
        <property name="targetTask" value="Receive Sample" />
      </bean>
    </property>
  </bean>

  <bean id="wasp.sample.receiveSampleWaitStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.WaitForSiblingJobStateProcessor">
        <property name="task" value="Receive Sample" />
        <property name="status" value="RECEIVED" />
        <property name="siblingTargetStatus" value="FINAL" />
      </bean>
    </property>
  </bean>

  <batch:flow id="wasp.sample.sampleReceived">
    <batch:step id="wasp.sample.sampleReceived0" parent="wasp.sample.receiveSampleStateStep" next="wasp.sample.sampleReceived1" />
    <batch:step id="wasp.sample.sampleReceived1" parent="wasp.sample.receiveSampleWaitStateStep" />
  </batch:flow>

  <!-- /sampleReceived -->

  <!-- createLibrary -->
  <bean id="wasp.sample.createLibraryStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.CreateSampleStateProcessor">
        <property name="targetTask" value="Create Library" />
      </bean>
    </property>
  </bean>
                                                                                  <bean id="wasp.sample.createLibraryWaitStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.WaitForSiblingJobStateProcessor">
        <property name="task" value="Create Library" />
        <property name="status" value="MADE" />
        <property name="siblingTargetStatus" value="FINAL" />
      </bean>
    </property>
  </bean>

  <batch:flow id="wasp.sample.createLibrary">
    <batch:step id="wasp.sample.createLibrary0" parent="wasp.sample.createLibraryStateStep" next="wasp.sample.createLibrary1" />
    <batch:step id="wasp.sample.createLibrary1" parent="wasp.sample.createLibraryWaitStateStep" />
  </batch:flow> 

  <!-- /createLibrary -->

  <!-- default mps dna flow-->
  <batch:flow id="wasp.sample.defaultMpsDnaFlow">
    <batch:flow id="wasp.sample.defaultMpsDnaFlow0" parent="wasp.sample.sampleReceived" next="wasp.sample.defaultMpsDnaFlow1" />
    <batch:flow id="wasp.sample.defaultMpsDnaFlow1" parent="wasp.sample.createLibrary" /> 
<!-- wait for job approval -->
<!-- generate library -->
<!-- wait for platformunit assignment / SKIP -->
<!-- wait for run / SKIP -->
<!-- wait for file -->
<!-- run QC -->
  </batch:flow>
  <!-- /default mps dna flow-->

  <!-- default mps library flow-->
  <batch:flow id="wasp.sample.defaultMpsLibraryFlow">
    <batch:flow id="wasp.sample.defaultMpsLibraryFlow0" parent="wasp.sample.sampleReceived" />
  </batch:flow>
  <!-- /default mps library flow-->

  <batch:job id="chipSeqDna.workflow">
    <batch:flow id="chipSeq.defaultMpsDnaFlow" parent="wasp.sample.defaultMpsDnaFlow" />
  </batch:job>

  <batch:job id="chipSeqLibrary.workflow">
    <batch:flow id="chipSeq.defaultMpsLibraryFlow" parent="wasp.sample.defaultMpsLibraryFlow" />
  </batch:job>
</beans>
