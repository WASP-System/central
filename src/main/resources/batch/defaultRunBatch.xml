<?xml version="1.0" encoding="UTF-8"?>
<beans
    xsi:schemaLocation=" http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd     
  http://www.springframework.org/schema/integration
  http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
  http://www.springframework.org/schema/batch 
  http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
  "
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:batch="http://www.springframework.org/schema/batch" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:si="http://www.springframework.org/schema/integration" 
    xmlns="http://www.springframework.org/schema/beans"
    default-autowire="byName">

  <bean abstract="true" id="workflowResourceCategoryRunPoller" class="edu.yu.einstein.wasp.batch.poller.WorkflowResourceCategoryRunPoller" />

  <bean id="defaultRunPoller" parent="workflowResourceCategoryRunPoller">
    <property name="resourceCategoryIName" value="illuminaHiSeq2000"/>
    <property name="taskIName" value="runWrapTask"/>
  </bean>

  <si:inbound-channel-adapter ref="defaultRunPoller" method="getStates" channel="defaultRunChannel">
    <si:poller fixed-rate="2000"/>
  </si:inbound-channel-adapter>

  <si:service-activator input-channel="defaultRunChannel" output-channel="logger">
    <bean class="edu.yu.einstein.wasp.batch.launcher.StateJobLaunchingMessageHandler" scope="prototype">
       <constructor-arg ref="jobRegistry" />
       <constructor-arg ref="jobLauncher" />
       <constructor-arg ref="jobRepository" />
       <constructor-arg ref="jobOperator" />
       <constructor-arg type="java.lang.String"><value>wasp.defaultRun.workflow</value></constructor-arg>
    </bean>
  </si:service-activator>

  <!-- ************************************************ used as template
  ******************************************************* -->


  <!-- getResults -->
                                                                                  <bean id="wasp.run.getResultsFileStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.WaitForRunFileProcessor">
        <property name="filenameRegex" value=".*\.completed.txt" />
      </bean>
    </property>
  </bean>

  <batch:flow id="wasp.run.getResults">
    <batch:step id="wasp.run.getResults0" parent="wasp.run.getResultsFileStep" />
  </batch:flow> 


  <!-- /getResults -->

  <!-- qcRun -->
  <bean id="wasp.run.createQcApprovalStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.CreateSampleStateProcessor">
        <property name="targetTask" value="runQcApproval" />
      </bean>
    </property>
  </bean>

  <bean id="wasp.run.waitForQcApprovalStateUpdated" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.WaitForSiblingRunStateProcessor">
        <property name="task" value="runQcApproval" />
        <property name="status" value="APPROVED" />
        <property name="siblingTargetStatus" value="FINAL" />
      </bean>
    </property>
  </bean>

  <batch:flow id="wasp.run.qcApprovalFlow">
    <batch:step id="wasp.run.qcApprovalStep0" parent="wasp.run.createQcApprovalStateStep" next="wasp.run.qcApprovalStep1" />
    <batch:step id="wasp.run.qcApprovalStep1" parent="wasp.run.waitForQcApprovalStateUpdated" />
  </batch:flow>

  <!-- /qcRun -->


  <!-- default run flow-->
  <batch:flow id="wasp.run.defaultRunFlow">
    <batch:flow id="wasp.run.defaultRunFlow0" parent="wasp.run.getResults" next="wasp.run.defaultRunFlow1" />
    <batch:flow id="wasp.run.defaultRunFlow1" parent="wasp.run.qcApprovalFlow" />
  </batch:flow>
  <!-- /default mps dna flow-->

  <!-- default run job flow-->
  <batch:job id="wasp.defaultRun.workflow">
    <batch:flow id="wasp.defaultRun.flow" parent="wasp.run.defaultRunFlow" next="wasp.defaultRun.finishFlow" />

    <batch:flow id="wasp.defaultRun.finishFlow" parent="finishJobFlow" />
  </batch:job>
  <!-- default run job flow-->




</beans>
