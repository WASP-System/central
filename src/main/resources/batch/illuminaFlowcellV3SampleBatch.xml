<?xml version="1.0" encoding="UTF-8"?>
<beans
    xsi:schemaLocation=" http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd     
  http://www.springframework.org/schema/integration
  http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
  http://www.springframework.org/schema/batch 
  http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
  "
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:batch="http://www.springframework.org/schema/batch" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:si="http://www.springframework.org/schema/integration" 
    xmlns="http://www.springframework.org/schema/beans"
    default-autowire="byName">

  <bean id="illuminaFlowcellV3SamplePoller" parent="workflowSamplePoller">
    <property name="subtypeSampleIName" value="illuminaFlowcellV3"/>
    <property name="taskIName" value="sampleWrapTask"/>
  </bean>

  <si:inbound-channel-adapter ref="illuminaFlowcellV3SamplePoller" method="getStates" channel="illuminaFlowcellV3SampleChannel">
    <si:poller fixed-rate="2000"/>
  </si:inbound-channel-adapter>

  <si:service-activator input-channel="illuminaFlowcellV3SampleChannel" output-channel="logger">
    <bean class="edu.yu.einstein.wasp.batch.launcher.StateJobLaunchingMessageHandler" scope="prototype">
       <constructor-arg ref="jobRegistry" />
       <constructor-arg ref="jobLauncher" />
       <constructor-arg ref="jobRepository" />
       <constructor-arg ref="jobOperator" />
       <constructor-arg type="java.lang.String"><value>illuminaFlowcellV3Sample.workflow</value></constructor-arg>
    </bean>
  </si:service-activator>


  <!-- placeAmplicon -->
  <bean id="illuminaFlowcellV3Sample.placeAmpliconStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.CreateSampleStateProcessor">
        <property name="targetTask" value="placeAmplicon" />
      </bean>
    </property>
  </bean>

  <bean id="illuminaFlowcellV3Sample.placeAmpliconWaitStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.WaitForSiblingSampleStateProcessor">
        <property name="task" value="placeAmplicon" />
        <property name="status" value="PLACED" />
        <property name="siblingTargetStatus" value="FINAL" />
      </bean>
    </property>
  </bean>

  <batch:flow id="illuminaFlowcellV3Sample.placeAmplicon">
    <batch:step id="illuminaFlowcellV3Sample.placeAmplicon0" parent="illuminaFlowcellV3Sample.placeAmpliconStateStep" next="illuminaFlowcellV3Sample.placeAmplicon1" />
    <batch:step id="illuminaFlowcellV3Sample.placeAmplicon1" parent="illuminaFlowcellV3Sample.placeAmpliconWaitStateStep" />
  </batch:flow>

  <!-- placeAmplicon -->


  <!-- returnAmplicon -->
  <bean id="illuminaFlowcellV3Sample.returnAmpliconStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.CreateSampleStateProcessor">
        <property name="targetTask" value="returnAmplicon" />
      </bean>
    </property>
  </bean>

  <bean id="illuminaFlowcellV3Sample.returnAmpliconWaitStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.WaitForSiblingSampleStateProcessor">
        <property name="task" value="returnAmplicon" />
        <property name="status" value="OK" />
        <property name="siblingTargetStatus" value="FINAL" />
      </bean>
    </property>
  </bean>

  <batch:flow id="illuminaFlowcellV3Sample.returnAmplicon">
    <batch:step id="illuminaFlowcellV3Sample.returnAmplicon0" parent="illuminaFlowcellV3Sample.returnAmpliconStateStep" next="illuminaFlowcellV3Sample.returnAmplicon1" />
    <batch:step id="illuminaFlowcellV3Sample.returnAmplicon1" parent="illuminaFlowcellV3Sample.returnAmpliconWaitStateStep" />
  </batch:flow>

  <!-- returnAmplicon -->






  <batch:job id="illuminaFlowcellV3Sample.workflow">
    <batch:flow id="illuminaFlowcellV3Sample0" parent="wasp.sample.sampleReceived" next="illuminaFlowcellV3Sample1" />
    <batch:flow id="illuminaFlowcellV3Sample1" parent="wasp.sample.libraryPlatformUnitAssign" next="illuminaFlowcellV3Sample2" />

    <batch:flow id="illuminaFlowcellV3Sample2" parent="illuminaFlowcellV3Sample.placeAmplicon" next="illuminaFlowcellV3Sample3" />
    <batch:flow id="illuminaFlowcellV3Sample3" parent="illuminaFlowcellV3Sample.returnAmplicon" next="illuminaFlowcellV3Sample4" />

    <!-- send to amplicon -->
    <!-- send to sequencer -->
    <!-- wait for results -->
    <!-- send to qc -->

    <!-- dispatch files to libraries -->
    <!-- update library status -->

    <batch:flow id="illuminaFlowcellV3Sample4" parent="finishJobFlow" />


    <!-- <batch:flow id="illuminaFlowcellV3Sample.finishFlow" parent="finishJobFlow" /> -->
  </batch:job>

</beans>
