<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">
		
	
	<!-- for job, call with parameters RUN_ID -->
	<batch:job id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow">
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.notifyTrimGaloreStart" next="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.trimGalore">
			<batch:tasklet>
						<batch:transaction-attributes propagation="NEVER"/>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.plugin.babraham.integration.messages.BabrahamStatusMessageTemplate">
							<constructor-arg name="id" value="#{jobParameters[waspJobParameters.RUN_ID]}" />
							<property name="task" value="#{babrahamBatchJobTask.TRIM_GALORE}" />
							<property name="status" value="STARTED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
		
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.trimGalore">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.plugin.babraham.batch.tasklet.TrimGaloreTasklet" scope="step">
					<constructor-arg name="runId" value="#{jobParameters[waspJobParameters.RUN_ID]}" />
					<constructor-arg name="softwareName" value="#{jobParameters[waspJobParameters.BEAN_NAME]}" />
				</bean>
			</batch:tasklet>
			<batch:next on="FAILED" to="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.notifyTrimGaloreFailure"/>
			<batch:next on="*" to="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.listenForCompletion" />
		</batch:step>
		
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.listenForCompletion">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.ListenForManyStatusMessagesTasklet" scope="step" />
			</batch:tasklet>
			<batch:next on="FAILED" to="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.notifyTrimGaloreFailure"/>
			<batch:next on="*" to="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.register" />
		</batch:step>
		
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.register">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.plugin.babraham.batch.tasklet.TrimGaloreDoRegisterTasklet" scope="step">
					<constructor-arg name="runId" value="#{jobParameters[waspJobParameters.RUN_ID]}" />
					<constructor-arg name="softwareName" value="#{jobParameters[waspJobParameters.BEAN_NAME]}" />
				</bean>
			</batch:tasklet>
			<batch:next on="FAILED" to="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.notifyTrimGaloreFailure"/>
			<batch:next on="*" to="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.listenForRegistration" />
		</batch:step>
		
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.listenForRegistration">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.ListenForManyStatusMessagesTasklet" scope="step" />
			</batch:tasklet>
			<batch:next on="FAILED" to="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.notifyTrimGaloreFailure"/>
			<batch:next on="*" to="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.notifyTrimGaloreComplete" />
		</batch:step>
		
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.notifyTrimGaloreComplete">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.plugin.babraham.integration.messages.BabrahamStatusMessageTemplate">
							<constructor-arg name="id" value="#{jobParameters[waspJobParameters.RUN_ID]}" />
							<property name="task" value="#{babrahamBatchJobTask.TRIM_GALORE}" />
							<property name="status" value="COMPLETED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
		
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.mainFlow.notifyTrimGaloreFailure">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.plugin.babraham.integration.messages.BabrahamStatusMessageTemplate">
							<constructor-arg name="id" value="#{jobParameters[waspJobParameters.RUN_ID]}" />
							<property name="task" value="#{babrahamBatchJobTask.TRIM_GALORE}" />
							<property name="status" value="FAILED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
		
	</batch:job>
	
	<!-- Trimming happens at the per fileHandle level -->
	<batch:job id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.fileTrim">
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.fileTrim.doTrim">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.plugin.babraham.batch.tasklet.TrimGaloreTrimmingTasklet" scope="step">
					<constructor-arg name="softwareName" value="#{jobParameters[waspJobParameters.BEAN_NAME]}" />
					<constructor-arg name="runId" value="#{jobParameters[waspJobParameters.RUN_ID]}" />
					<constructor-arg name="cellLibraryId" value="#{jobParameters[waspJobParameters.CELL_LIBRARY_ID]}" />
					<constructor-arg name="fileGroupId" value="#{jobParameters[waspJobParameters.FILE_GROUP_ID]}" />
					<constructor-arg name="fileNumber" value="#{jobParameters[T(edu.yu.einstein.wasp.filetype.service.FileTypeService).FILETYPE_FILE_NUMBER_META_KEY]}" />
					<constructor-arg name="readSegments" value="#{jobParameters[T(edu.yu.einstein.wasp.plugin.fileformat.service.FastqService).FASTQ_GROUP_NUMBER_OF_READ_SEGMENTS]}" />
				</bean>
			</batch:tasklet>
			<batch:next on="FAILED" to="edu.yu.einstein.wasp.plugin.babraham.trim_galore.fileTrim.notifyManyFail" />
			<batch:next on="*" to="edu.yu.einstein.wasp.plugin.babraham.trim_galore.fileTrim.notifyManySuccess" />
		</batch:step>
		
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.fileTrim.notifyManyFail">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.ManyJobStatusMessageTemplate">
							<constructor-arg name="parentId" value="#{jobParameters[T(edu.yu.einstein.wasp.integration.messages.templates.WaspMessageTemplate).PARENT_ID]}" />
							<constructor-arg name="childId" value="#{jobParameters[T(edu.yu.einstein.wasp.integration.messages.templates.WaspMessageTemplate).CHILD_MESSAGE_ID]}" />
							<property name="status" value="FAILED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.fileTrim.notifyManySuccess">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.ManyJobStatusMessageTemplate">
							<constructor-arg name="parentId" value="#{jobParameters[T(edu.yu.einstein.wasp.integration.messages.templates.WaspMessageTemplate).PARENT_ID]}" />
							<constructor-arg name="childId" value="#{jobParameters[T(edu.yu.einstein.wasp.integration.messages.templates.WaspMessageTemplate).CHILD_MESSAGE_ID]}" />
							<property name="status" value="COMPLETED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<!-- Registration happens at the per cellLibrary level -->
	<batch:job id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.register">
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.register.doRegister">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.plugin.babraham.batch.tasklet.TrimGaloreRegisteringTasklet" scope="step">
					<constructor-arg name="runId" value="#{jobParameters[waspJobParameters.RUN_ID]}" />
					<constructor-arg name="softwareName" value="#{jobParameters[waspJobParameters.BEAN_NAME]}" />
					<constructor-arg name="cellLibraryId" value="#{jobParameters[waspJobParameters.CELL_LIBRARY_ID]}" />
				</bean>
			</batch:tasklet>
			<batch:next on="FAILED" to="edu.yu.einstein.wasp.plugin.babraham.trim_galore.register.notifyRegisterFail" />
			<batch:next on="*" to="edu.yu.einstein.wasp.plugin.babraham.trim_galore.register.notifyRegisterSuccess" />
		</batch:step>
		
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.register.notifyRegisterFail">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.ManyJobStatusMessageTemplate">
							<constructor-arg name="parentId" value="#{jobParameters[T(edu.yu.einstein.wasp.integration.messages.templates.WaspMessageTemplate).PARENT_ID]}" />
							<constructor-arg name="childId" value="#{jobParameters[T(edu.yu.einstein.wasp.integration.messages.templates.WaspMessageTemplate).CHILD_MESSAGE_ID]}" />
							<property name="status" value="FAILED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
			<batch:fail on="*"/>
		</batch:step>
		<batch:step id="edu.yu.einstein.wasp.plugin.babraham.trim_galore.register.notifyRegisterSuccess">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.ManyJobStatusMessageTemplate">
							<constructor-arg name="parentId" value="#{jobParameters[T(edu.yu.einstein.wasp.integration.messages.templates.WaspMessageTemplate).PARENT_ID]}" />
							<constructor-arg name="childId" value="#{jobParameters[T(edu.yu.einstein.wasp.integration.messages.templates.WaspMessageTemplate).CHILD_MESSAGE_ID]}" />
							<property name="status" value="COMPLETED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
	</batch:job>

</beans>

