<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

	<batch:flow id="helptag.library.countHpaii.flow.v1" >
		<batch:step id="helptag.library.countHpaii.step.notifyHelptagStart" next="helptag.library.countHpaii.step.countHpaii">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.helptag.integration.messages.SimpleHelptagStatusMessageTemplate">
							<property name="status" value="STARTED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>

		<batch:step id="helptag.library.countHpaii.step.countHpaii">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.helptag.batch.tasklet.HpaiiCountTasklet" scope="step">
					<constructor-arg name="cellLibraryId" value="#{jobParameters[waspJobParameters.CELL_LIBRARY_ID]}" />
				</bean>
			</batch:tasklet>
			<batch:next on="FAILED" to="helptag.library.countHpaii.step.notifyHcountFailed" />
			<batch:end on="SKIP"/>
			<batch:next on="*" to="helptag.library.countHpaii.step.notifyHcountComplete" />
			<batch:listeners>
				<batch:listener>
					<bean class="org.springframework.batch.core.listener.ExecutionContextPromotionListener">
						<property name="keys" value="scrDir,cellLibId"  />
						<property name="statuses" value="COMPLETED,FAILED" />
					</bean>
				</batch:listener>
			</batch:listeners>
		</batch:step>

		<batch:step id="helptag.library.countHpaii.step.notifyHcountComplete">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.AnalysisStatusMessageTemplate">
							<property name="cellLibraryId" value="#{jobParameters[waspJobParameters.CELL_LIBRARY_ID]}"/>
							<property name="task" value="Helptag Pipeline" />
							<property name="status" value="COMPLETED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
		
		<batch:step id="helptag.library.countHpaii.step.notifyHcountFailed">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.AnalysisStatusMessageTemplate">
							<property name="cellLibraryId" value="#{jobParameters[waspJobParameters.CELL_LIBRARY_ID]}"/>
							<property name="task" value="Helptag Pipeline" />
							<property name="status" value="FAILED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
			<batch:fail on="*" />
		</batch:step>
	</batch:flow>
	
	<batch:job id="helptag.library.preProcess.job" restartable="true" >
		<batch:flow id= "helptag.library.align.flow" parent="genericDnaSeq.library.preProcess.flow.v1" next="helptag.library.countHpaii.flow" />
		<batch:flow id= "helptag.library.countHpaii.flow" parent="helptag.library.countHpaii.flow.v1" />
	</batch:job>

	<!-- <bean id="helptag.library.preProcess.skipTasklet" class="edu.yu.einstein.wasp.daemon.batch.tasklets.SkipTasklet" scope="step" /> -->

</beans>

<!-- NOTE 1: public static members of a bean can easily be accessed using SpEL e.g.:  -->
<!-- <property name="task" value="#{fooBatchJobTask.MY_TASK}" /> -->

<!-- NOTE 2: job parameters provided during job launching can be accessed by name using SpEL e.g.:  -->
<!-- <constructor-arg name="fileGroupId" value="#{jobParameters['fileGroupId']}" /> -->
<!-- or better to use statics (see NOTE 1): <constructor-arg name="fileGroupId" value="#{jobParameters[waspJobParameters.FILE_GROUP_ID]}" /> -->
<!-- For this to work the tasklet bean definition must be in step scope (scope="step") -->


