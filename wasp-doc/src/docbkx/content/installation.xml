<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns5="http://www.w3.org/2000/svg"
         xmlns:ns4="http://www.w3.org/1998/Math/MathML"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">

	<title>Installation</title>
	<para>
		What you need to get WASP installed.
	</para>
	<section>
		<title>Getting the WASP System Source Code from GitHub</title>
		<para>
			Make sure you have Git on your server (obtain from <ulink url="http://git-scm.com">http://git-scm.com</ulink>) and obtain the latest WASP System code from <ulink url='https://github.com/WASP-System'>https://github.com/WASP-System</ulink>.
			<important><para>Please make sure you understand the importance of line endings in Git and adjust your setting accordingly: <ulink url="http://help.github.com/articles/dealing-with-line-endings">http://help.github.com/articles/dealing-with-line-endings</ulink></para></important>
		</para>
		<para>
			After cloning the WASP System source code, you’ll notice the project contains many folders. Most of these represent modules of the system, wrapped up into individual Maven projects:
			<informaltable frame='none'>
				<tgroup cols='2'>
					<tbody>
						<row><entry>db</entry><entry>Contains database initialization files</entry></row>
						<row><entry>wasp-parent</entry><entry>Hosts a parent.pom that defines common dependencies and versions required by other components. Maven Project.</entry></row>
						<row><entry>wasp-web</entry><entry>The WASP System webapp. Maven/Spring project. Builds a war file for Tomcat7 deployment.</entry></row>
						<row><entry>wasp-core</entry><entry>Spring component containing core code. Maven/Spring project. Builds a jar.</entry></row>
						<row><entry>wasp-config</entry><entry>local configuration e.g. database and email sever details etc. Maven/Spring project. Builds a jar.</entry></row>
						<row><entry>wasp-exec</entry><entry>Spring component that runs WASP System task management flows and pipeline flows. Maven/Spring project. Builds a jar.</entry></row>
						<row><entry>wasp-plugins</entry><entry>Contains subfolders which contain modular extensions, each is a Maven/Spring project that builds a jar.</entry></row>
						<row><entry>wasp-tomcat-classloader</entry><entry>Extends WebappClassLoader to allow loading of classes from the waspPlugins folder in the Tomcat base folder. Maven project. Builds a jar</entry></row>
						<row><entry>wasp-cli</entry><entry>Used to run wasp analysis jobs from the command line. Maven/Spring project. Builds a jar.</entry></row>
						<row><entry>wasp-doc</entry><entry>This DocBooks documentation. Builds documentation</entry></row>
					</tbody>
				</tgroup>
			</informaltable>
		</para>
	</section>
	<section>
		<title>Setting up the Server (Linux)</title>
		<orderedlist numeration="arabic">
			<listitem>
				<para>Download the latest versions of  the following software packages and install according to the provider’s instructions:</para>
				<para>
					<itemizedlist>
						<listitem><para><application>Apache Tomcat7</application> (<ulink url='http://tomcat.apache.org'>http://tomcat.apache.org</ulink>)</para></listitem>
						<listitem><para><application>Apache Maven3</application>(<ulink url='http://maven.apache.org'>http://maven.apache.org</ulink>)</para></listitem>
						<listitem><para><application>Apache Ant</application> (<ulink url='http://ant.apache.org'>http://ant.apache.org</ulink>)</para></listitem>
						<listitem><para><application>Oracle Java SE 6</application> (<ulink url='http://www.oracle.com'>http://www.oracle.com</ulink>)</para></listitem>
						<listitem><para><application>MySQL Community Server</application> (<ulink url='http://www.mysql.com/downloads/mysql'>http://www.mysql.com/downloads/mysql</ulink>)</para></listitem>
					</itemizedlist>
				</para>
			</listitem>
			<listitem>
				<para>Add environment variables to your user profile and set the values to the paths of the installations above:</para>
				<para>
					<itemizedlist>
						<listitem><para><envar>ANT_HOME</envar></para></listitem>
						<listitem><para><envar>JAVA_HOME</envar></para></listitem>
						<listitem><para><envar>CATALINA_HOME</envar></para></listitem>
						<listitem><para><envar>MAVEN_HOME</envar></para></listitem>
					</itemizedlist>
				</para>
				<para>Then set the PATH environment variable to point to the relevant binaries.</para>
				
				<programlisting>PATH=$JAVA_HOME/bin:$ANT_HOME/bin:$MAVEN_HOME/bin:$PATH</programlisting>
				
				<para>E.g. in a typical Linux setup using bash, your <filename>.bashrc</filename> file should contain something similar to this:</para>
				<programlisting>
export ANT_HOME=/opt/ant
export JAVA_HOME=/usr/java/latest
export CATALINA_HOME=/usr/local/tomcat/tomcat/current
export MAVEN_HOME=/opt/maven/current
export PATH=$JAVA_HOME/bin:$ANT_HOME/bin:$MAVEN_HOME/bin:$PATH
				</programlisting>
			</listitem>
		</orderedlist>
	</section>
	<section>
		<title>Tomcat 7 setup</title>
		<orderedlist numeration="arabic">
			<listitem>
				<para>Using your favorite editor, create a new file in folder <filename>$CATALINA_HOME/bin</filename> called
				<filename>setenv.sh</filename>, and put the following text into it and save:</para>
				<programlisting>
CATALINA_HOME="/usr/local/tomcat/tomcat"
JAVA_OPTS="-Xms16m -Xmx256m -XX:MaxPermSize=128m"
JAVA_HOME="/usr/java/latest"
				</programlisting>
			</listitem>
			<listitem>
				<para>Open <filename>$CATALINA_HOME/conf/tomcat-users.xml</filename> using your favorite editor and add the
				following (replacing placeholders ‘myGuiPass’ and ‘myScriptPass’ with your own choice of
				passwords):</para>
				<programlisting><![CDATA[
</tomcat-users>
	<role rolename="manager-gui"/>
	<user username="tomcat" password="myGuiPass" roles="manager-gui"/>
	<role rolename="manager-script"/>
	<user username="tomcat-script" password="myScriptPass" 
		roles="manager-script"/>
</tomcat-users>
				]]></programlisting>
				<para>The <quote>manager-script</quote> account is used to deploy The WASP System using Maven. The <quote>managergui</quote>
				account can be used to manage your tomcat installation at <systemitem class="systemname">http://localhost:8080/manager.</systemitem>
				To deploy wasp using Maven, the following complementary information about the server needs
				to be added to your local maven configuration as follows:</para>
				<para>From within your home folder, open the <filename>.m2/settings.xml</filename> file and locate the <literal><![CDATA[<server></server>]]></literal>
				tags. In between these tags place the following (replacing placeholder <quote>myScriptPass</quote> with the
				same password you used above for the <quote>tomcat-script</quote> account):</para>
				<programlisting><![CDATA[
<server>
	<id>tomcat-localhost</id>
	<username>tomcat-script</username>
	<password>myScriptPass</password>
</server>
				]]></programlisting>
			</listitem>
			<listitem>
			<para>Create the folders below:</para>
			<programlisting>
$CATALINA_HOME/waspPlugins
$CATALINA_HOME/downloads
			</programlisting>
			<para>Ensure that their permissions are set such that Maven can copy files into the waspPlugins
			folder, and that the Tomcat user can write to the downloads file.</para>
		</listitem>
		<listitem>
		<para>To create a startup launch daemon:</para>
		<orderedlist numeration='lowerroman'>
			<listitem>
				<para>Type the following at the command line:</para>
				<programlisting>
$ cd $CATALINA_HOME/bin
$ tar xvfz commons-daemon-native.tar.gz
$ cd commons-daemon-1.0.x-native-src/unix
$ ./configure
$ make
$ cp jsvc ../..
				</programlisting>
			</listitem>
			<listitem><para>
				Using your favorite editor and sudo, copy the contents of the file 
				<filename>wasp-doc/src/scripts/tomcat7-init.d.sh</filename> to the location:
				<filename>/etc/init.d/tomcat7</filename>.
				<important><para>Replace the values of the variables under <quote># local
				config section</quote> at the top with values relevant to your setup</para></important>
			</para>
				</listitem>
				<listitem><para>At the command line run: <userinput>$ chkconfig --add tomcat7</userinput></para></listitem>
				<listitem><para>At the command line run <userinput>$ sudo /etc/init.d/tomcat7 start</userinput> to start tomcat. You should see a welcome page at 
				<systemitem class="systemname">http://localhost:8080</systemitem> if all went well.</para></listitem>
			</orderedlist>
		</listitem>
	</orderedlist>
	</section>
	<section>
	<title>Installing, Building and Deploying WASP</title>
	<orderedlist numeration='arabic'>
		<listitem><para>Clone the wasp repository using git clone url. It may be useful to set an environment variable
			in your <filename>.bash_profile</filename> (or <filename>.bashrc</filename>) to point to this installation. For the remainder of this section it
			is assumed you have created such a variable and called it <envar>WASP_HOME</envar>.</para></listitem>
		<listitem><para>Initialize the wasp database by running the following at the command line:</para>
			<programlisting><![CDATA[
$ mysql -uroot -p < $WASP_HOME/db/InitializeWaspDb.sql
$ mysql -uroot -p wasp < $WASP_HOME/db/createSpringBatchTables.sql
			]]></programlisting>
		</listitem>
		<listitem><para>Install the core WASP components:</para>
			<programlisting>
$ cd $WASP_HOME
$ mvn clean install
			</programlisting>
			<para>Check to see that <filename>wasp-tomcat-classloader-x.x.x-SNAPSHOT.jar</filename> has been copied into the
			<filename>$CATALINA_HOME/lib</filename> folder. If not (due to a permissions issue) you should do this manually:
			<userinput>$ sudo cp $WASP_HOME/wasp-tomcat-classloader/target/wasp-tomcat-classloader-?.?.?-SNAPSHOT.jar $CATALINA_HOME/lib</userinput></para>
		</listitem>
		<listitem><para>Install the provided plugins:</para>
			<para><userinput>$ for x in `ls -d $WASP_HOME/wasp-plugins/*`;do cd $x; mvn -Dcatalina.home=$CATALINA_HOME clean install;done</userinput></para>
			<para>If the jars failed to be copied into the $CATALINA_HOME/waspPlugins folder, make sure your
				user has permission to write to this folder and try again.</para>
		</listitem>
		<listitem><para>Deploy the WASP System webapp: <userinput>$ mvn tomcat:deploy</userinput></para>
			<para>If this fails you should check that Tomcat7 Setup Step 2, above, was completed properly.</para>
			<note>The commands <userinput>$ mvn tomcat:undeploy</userinput> and <userinput>$ mvn tomcat:redeploy</userinput> are also useful and selfexplanatory.</note>
		</listitem>
		<listitem><para>Goto <systemitem class="systemname">localhost:8080/wasp</systemitem>. If you see the login page you have set up the webapp properly.</para></listitem>
		<listitem><para>You may start up the backend executable component (task management) in a new shell as follows:</para>
			<programlisting><![CDATA[
$ cd $WASP_HOME/wasp-exec
$ java -Dcatalina.home=$CATALINA_HOME \ 
	-cp "target/wasp-exec-0.1.0-SNAPSHOT.jar:$CATALINA_HOME/waspPlugins/*" \
	edu.yu.einstein.wasp.batch.StartSpring
			]]></programlisting>
			<para>To run it in the background with no terminal output use this variant of the command instead:</para>
			<programlisting><![CDATA[
$ nohup java -Dcatalina.home=$CATALINA_HOME \
	-cp "target/wasp-exec-0.1.0-SNAPSHOT.jar:$CATALINA_HOME/waspPlugins/*" \
	edu.yu.einstein.wasp.batch.StartSpring > /dev/null 2>&1 &
			]]></programlisting>
		</listitem>
	</orderedlist>
	</section>
	<section>
		<title>Building the Documentation</title>
		<orderedlist numeration='arabic'>
			<listitem><para>The DocBook documentation (<ulink url='http://docbook.sourceforge.net'>docbook.sourceforge.net</ulink>) can be built by running the following commands:</para>
				<programlisting><![CDATA[
$ cd $WASP_HOME/wasp-doc
$ mvn clean install docbkx:generate-html docbkx:generate-pdf
$ cp -R $WASP_HOME/wasp-doc/src/docbkx/content/figures \
	$WASP_HOME/wasp-doc/target/docbkx/html
				]]></programlisting>
			</listitem>
			<listitem><para>Javadoc can be generated by running <userinput>$ mvn javadoc:javadoc</userinput> in any component parent folder, e.g.
<filename>WASP_HOME/wasp-web</filename> (for the WASP SYSTEM webapp) or <filename>$WASP_HOME/wasp-core</filename>
(for the core code). The documentation can then be found in <filename>target/apidocs</filename> folder under the component parent folder.</para>
			</listitem>
		</orderedlist>
	</section>
</chapter>
