<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

	<!-- common tasklets defined in config-common-context.xml -->
	
	<bean id="wasp.sample.typeDecider" class="edu.yu.einstein.wasp.decider.SampleTypeDecider" scope="step">
		<constructor-arg value="#{jobParameters['sampleId']}" />
	</bean>
	
	<bean id="waspNotifyLibraryCreatedTasklet" class="edu.yu.einstein.wasp.tasklets.NotifyStatusTasklet" scope="step">
		<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
		<constructor-arg name="messageTemplate">
			<bean class="edu.yu.einstein.wasp.messages.WaspLibraryStatusMessageTemplate">
				<constructor-arg name="sampleId" value="#{jobParameters['sampleId']}" />
				<property name="task" value="#{libraryTasks.NOTIFY_STATUS}" />
				<property name="status" value="CREATED" />
			</bean>
		</constructor-arg>
	</bean>
	
	<batch:flow id="wasp.sample.mainFlow.v1">
			<batch:split id="wasp.sample.postSubmitTasks">
			<batch:flow>
				<batch:step id="listenForSampleReceivedTasklet">
					<batch:tasklet>
						<bean class="edu.yu.einstein.wasp.tasklets.ListenForStatusTasklet">
							<constructor-arg name="inputSubscribableChannel" ref="wasp.channel.notification.sample" />
							<constructor-arg name="messageTemplate">
								<bean class="edu.yu.einstein.wasp.messages.SampleStatusMessageTemplate" >
									<constructor-arg name="sampleId" value="#{jobParameters['sampleId']}" />
									<property name="status" value="RECEIVED" />
								</bean>
							</constructor-arg>
						</bean>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:flow>
				<batch:step id="wasp.sample.mainFlow.listenForJobApproved">
					<batch:tasklet>
						<bean class="edu.yu.einstein.wasp.tasklets.ListenForStatusTasklet">
							<constructor-arg name="inputSubscribableChannel" ref="wasp.channel.notification.job" />
							<constructor-arg name="messageTemplate">
								<bean class="edu.yu.einstein.wasp.messages.JobStatusMessageTemplate" >
									<constructor-arg name="jobId" value="#{jobParameters['jobId']}" />
									<property name="status" value="ACCEPTED" />
								</bean>
							</constructor-arg>
						</bean>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:next on="FAILED" to="wasp.sample.mainFlow.notifySampleAbandoned" />
			<batch:next on="COMPLETED" to="wasp.sample.mainFlow.sampleDecision" />
			<batch:fail on="*" /> <!-- unexpected message -->
		</batch:split>
		<batch:decision decider="wasp.sample.typeDecider" id="wasp.sample.mainFlow.sampleDecision">
			<batch:next on="SAMPLE" to="wasp.sample.mainFlow.sampleQC" />
			<batch:next on="LIBRARY" to="wasp.sample.mainFlow.notifyLibraryCreated" />
			<batch:end on="UNKNOWN" exit-code="EARLY TERMINATION" />
		</batch:decision>
		<batch:step id="wasp.sample.mainFlow.sampleQC">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.tasklets.ListenForFinishedStatusTasklet" scope="step">
					<constructor-arg name="inputSubscribableChannel" ref="wasp.channel.notification.sample" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.messages.SampleStatusMessageTemplate">
							<constructor-arg name="jobId" value="#{jobParameters['sampleId']}"/>
							<property name="task" value="#{sampleTask.QC}" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
			<batch:next on="FAILED" to="wasp.sample.mainFlow.notifySampleAbandoned" />
			<batch:next on="COMPLETED" to="wasp.sample.mainFlow.notifySampleReady" />
			<batch:fail on="*" /> <!-- unexpected message -->
		</batch:step>
		<batch:step id="wasp.sample.mainFlow.notifySampleReady">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.messages.SampleStatusMessageTemplate">
							<constructor-arg  name="sampleId" value="#{jobParameters['sampleId']}"/>
							<property name="status" value="ACCEPTED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
		<batch:step id="wasp.sample.mainFlow.notifySampleAbandoned">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.messages.SampleStatusMessageTemplate">
							<constructor-arg  name="sampleId" value="#{jobParameters['sampleId']}"/>
							<property name="status" value="ABANDONED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
		<batch:step id="wasp.sample.mainFlow.notifyLibraryRecieved">
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.messages.LibraryStatusMessageTemplate">
							<constructor-arg  name="sampleId" value="#{jobParameters['sampleId']}"/>
							<property name="status" value="RECEIVED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
	</batch:flow>
	
	
	<!-- for job, call with parameter 'sampleId' -->
	<batch:job id="wasp.sample.jobflow.v1">
		<batch:split id="wasp.sample.jobFlow.split" task-executor="taskExecutor">
			<batch:flow parent="wasp.sample.mainFlow.v1" />
			<batch:flow>
				<!-- will receive message of COMPLETED if the 'wasp.sample.mainFlow.v1' flow or job flow is finished -->
				<!-- or if the sample OR job is aborted with an ABANDONED message at time e.g. via a message from the web layer -->
				<batch:step id="wasp.sample.jobflow.ListenForComplete">
					<batch:tasklet>
						<bean class="edu.yu.einstein.wasp.tasklets.ListenForFinishedStatusTasklet" scope="step">
							<constructor-arg name="inputSubscribableChannel">
								<list>
									<ref bean="wasp.channel.notification.job" />
									<ref bean="wasp.channel.notification.sample" />
								</list>
							</constructor-arg>
							<constructor-arg name="messageTemplateSet">
								<list>
									<bean class="edu.yu.einstein.wasp.messages.JobStatusMessageTemplate">
										<constructor-arg name="jobId" value="#{jobParameters['sampleId']}"/>
									</bean>
									<bean class="edu.yu.einstein.wasp.messages.SampleStatusMessageTemplate">
										<constructor-arg name="jobId" value="#{jobParameters['sampleId']}"/>
									</bean>
								</list>
							</constructor-arg>
						</bean>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:end on="COMPLETED" exit-code="COMPLETED" />
			<batch:end on="FAILED" exit-code="ABANDONED" />
			<batch:fail on="*"/>
		</batch:split>
	</batch:job>
	
</beans>