<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">
		
	<bean id="abstractLibraryListeningTasklet" class="edu.yu.einstein.wasp.daemon.batch.tasklets.ListenForStatusTasklet" abstract="true">
		<property name="abandonMessages">
			<set>
				<bean class="edu.yu.einstein.wasp.integration.messages.templates.LibraryStatusMessageTemplate">
					<constructor-arg name="libraryId" value="#{jobParameters[waspJobParameters.LIBRARY_ID]}"/>
					<property name="status" value="ABANDONED" />
				</bean>
				<bean class="edu.yu.einstein.wasp.integration.messages.templates.LibraryStatusMessageTemplate">
					<constructor-arg name="libraryId" value="#{jobParameters[waspJobParameters.LIBRARY_ID]}"/>
					<property name="status" value="FAILED" />
				</bean>
				<bean class="edu.yu.einstein.wasp.integration.messages.templates.JobStatusMessageTemplate">
					<constructor-arg name="jobId" value="#{jobParameters[waspJobParameters.JOB_ID]}"/>
					<property name="status" value="COMPLETED" />
				</bean>
				<bean class="edu.yu.einstein.wasp.integration.messages.templates.JobStatusMessageTemplate">
					<constructor-arg name="jobId" value="#{jobParameters[waspJobParameters.JOB_ID]}"/>
					<property name="status" value="ABANDONED" />
				</bean>
				<bean class="edu.yu.einstein.wasp.integration.messages.templates.JobStatusMessageTemplate">
					<constructor-arg name="jobId" value="#{jobParameters[waspJobParameters.JOB_ID]}"/>
					<property name="status" value="FAILED" />
				</bean>
			</set>
		</property>	
	</bean>
		
	<!-- define library main flow -->
	<batch:flow id="wasp.default.library.mainFlow.v1">
		<batch:step id="wasp.library.step.libraryQC">
			<!-- Wait for QC result to be notified. If failed abandon this library flow otherwise library ready -->
			<batch:tasklet>
				<bean parent="abstractLibraryListeningTasklet" scope="step">
					<property name="messageToListenFor">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.LibraryStatusMessageTemplate">
							<constructor-arg name="libraryId" value="#{jobParameters[waspJobParameters.LIBRARY_ID]}" />
							<property name="task" value="#{libraryTasks.QC}" />
							<property name="status" value="COMPLETED" />
						</bean>
					</property>
					<property name="name" value="wasp.library.step.libraryQC" />
				</bean>
			</batch:tasklet>
			<batch:next on="FAILED" to="wasp.library.step.notifyLibraryAbandoned" />
			<batch:next on="COMPLETED" to="wasp.library.step.notifyLibraryAccepted" />
			<batch:fail on="*" /> <!-- unexpected message -->
		</batch:step>
		<batch:step id="wasp.library.step.notifyLibraryAccepted" >
			<!-- publish that library is ready for further processing -->
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.LibraryStatusMessageTemplate">
							<constructor-arg  name="libraryId" value="#{jobParameters[waspJobParameters.LIBRARY_ID]}"/>
							<property name="status" value="ACCEPTED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
		<batch:step id="wasp.library.step.notifyLibraryAbandoned">
			<!-- publish that library had been abandoned  -->
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.LibraryStatusMessageTemplate">
							<constructor-arg  name="libraryId" value="#{jobParameters[waspJobParameters.LIBRARY_ID]}"/>
							<property name="status" value="ABANDONED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
	</batch:flow>
	
	<batch:flow id="wasp.default.userLibrary.mainFlow.v1" >
		<batch:split id="wasp.library.waitUntilActionable" task-executor="taskExecutor">
			<!-- We need to wait for the library to be received and for the job to be approved before working on the library -->
			<batch:flow>
				<batch:step id="wasp.library.step.listenForLibraryReceived">
					<!-- Listen for library CREATED message: tells us library is physically received -->
					<batch:tasklet>
						<bean parent="abstractLibraryListeningTasklet" scope="step">
							<property name="messageToListenFor">
								<bean class="edu.yu.einstein.wasp.integration.messages.templates.LibraryStatusMessageTemplate" >
									<constructor-arg name="libraryId" value="#{jobParameters[waspJobParameters.LIBRARY_ID]}" />
									<property name="status" value="CREATED" />
								</bean>
							</property>
							<property name="parallelSiblingFlowSteps" value="1" />
							<property name="name" value="wasp.library.step.listenForLibraryReceived" />
						</bean>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:flow>
				<batch:step id="wasp.library.step.listenForJobApproved">
					<!-- Listen for job ACCEPTED message: tells us job is approved -->
					<batch:tasklet>
						<bean parent="abstractLibraryListeningTasklet" scope="step">
							<property name="messageToListenFor">
								<bean class="edu.yu.einstein.wasp.integration.messages.templates.JobStatusMessageTemplate" >
									<constructor-arg name="jobId" value="#{jobParameters[waspJobParameters.JOB_ID]}" />
									<property name="status" value="ACCEPTED" />
								</bean>
							</property>
							<property name="parallelSiblingFlowSteps" value="1" />
							<property name="name" value="wasp.library.step.listenForJobApproved" />
						</bean>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:next on="FAILED" to="wasp.userLibrary.step.notifyLibraryAbandoned" />
			<batch:next on="COMPLETED" to="wasp.default.library.mainFlow.step" />
			<batch:fail on="*" /> <!-- unexpected message -->
		</batch:split>
		<batch:step id="wasp.default.library.mainFlow.step">
			<batch:flow parent="wasp.default.library.mainFlow.v1" />
		</batch:step>
		<batch:step id="wasp.userLibrary.step.notifyLibraryAbandoned">
			<!-- publish that library had been abandoned  -->
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.LibraryStatusMessageTemplate">
							<constructor-arg  name="libraryId" value="#{jobParameters[waspJobParameters.LIBRARY_ID]}"/>
							<property name="status" value="ABANDONED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
	</batch:flow>

	
	<!-- for dispatching job, call with parameter 'libraryId' and 'jobId' -->
	<batch:job id="wasp.userLibrary.jobflow.v1" restartable="true">
			<batch:flow parent="wasp.default.userLibrary.mainFlow.v1" id="wasp.userLibrary.jobflow.mainFlow" />
	</batch:job>
	
	<!-- for dispatching job, call with parameter 'libraryId' and 'jobId' -->
	<batch:job id="wasp.facilityLibrary.jobflow.v1" restartable="true">
			<batch:flow parent="wasp.default.library.mainFlow.v1" id="wasp.default.library.mainFlow" />
	</batch:job>
	
</beans>