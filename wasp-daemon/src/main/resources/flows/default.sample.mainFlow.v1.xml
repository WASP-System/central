<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">
		
	<bean id="abstractSampleListeningTasklet" class="edu.yu.einstein.wasp.daemon.batch.tasklets.ListenForStatusTasklet" abstract="true">
		<property name="abandonMessages">
			<set>
				<bean class="edu.yu.einstein.wasp.integration.messages.templates.SampleStatusMessageTemplate">
					<constructor-arg name="sampleId" value="#{jobParameters[waspJobParameters.SAMPLE_ID]}"/>
					<property name="status" value="ABANDONED" />
				</bean>
				<bean class="edu.yu.einstein.wasp.integration.messages.templates.SampleStatusMessageTemplate">
					<constructor-arg name="sampleId" value="#{jobParameters[waspJobParameters.SAMPLE_ID]}"/>
					<property name="status" value="FAILED" />
				</bean>
				<bean class="edu.yu.einstein.wasp.integration.messages.templates.JobStatusMessageTemplate">
					<constructor-arg name="jobId" value="#{jobParameters[waspJobParameters.JOB_ID]}"/>
					<property name="status" value="COMPLETED" />
				</bean>
				<bean class="edu.yu.einstein.wasp.integration.messages.templates.JobStatusMessageTemplate">
					<constructor-arg name="jobId" value="#{jobParameters[waspJobParameters.JOB_ID]}"/>
					<property name="status" value="ABANDONED" />
				</bean>
				<bean class="edu.yu.einstein.wasp.integration.messages.templates.JobStatusMessageTemplate">
					<constructor-arg name="jobId" value="#{jobParameters[waspJobParameters.JOB_ID]}"/>
					<property name="status" value="FAILED" />
				</bean>
			</set>
		</property>	
	</bean>
			
	<!-- define sample main flow -->
	<batch:job id="wasp.sample.jobflow.v1" restartable="true">
		<batch:split id="wasp.sample.waitUntilActionable" task-executor="taskExecutor">
			<!-- We need to wait for the sample to be received and for the job to be approved before working on the sample -->
			<batch:flow>
				<batch:step id="wasp.sample.step.listenForSampleReceived">
					<!-- Listen for sample CREATED message: tells us sample is physically received -->
					<batch:tasklet>
						<bean parent="abstractSampleListeningTasklet" scope="step">
							<property name="messageToListenFor">
								<bean class="edu.yu.einstein.wasp.integration.messages.templates.SampleStatusMessageTemplate" >
									<constructor-arg name="sampleId" value="#{jobParameters[waspJobParameters.SAMPLE_ID]}" />
									<property name="status" value="CREATED" />
								</bean>
							</property>
							<property name="parallelSiblingFlowSteps" value="1" />
							<property name="name" value="wasp.sample.step.listenForSampleReceived" />
						</bean>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:flow>
				<batch:step id="wasp.sample.step.listenForJobApproved">
					<!-- Listen for job ACCEPTED message: tells us job is approved -->
					<batch:tasklet>
						<bean parent="abstractSampleListeningTasklet" scope="step">
							<property name="messageToListenFor">
								<bean class="edu.yu.einstein.wasp.integration.messages.templates.JobStatusMessageTemplate" >
									<constructor-arg name="jobId" value="#{jobParameters[waspJobParameters.JOB_ID]}" />
									<property name="status" value="ACCEPTED" />
								</bean>
							</property>
							<property name="parallelSiblingFlowSteps" value="1" />
							<property name="name" value="wasp.sample.step.listenForJobApproved" />
						</bean>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:next on="FAILED" to="wasp.sample.step.notifySampleAbandoned" />
			<batch:next on="COMPLETED" to="wasp.sample.step.sampleQC" />
			<batch:fail on="*" /> <!-- unexpected message -->
		</batch:split>
		<batch:step id="wasp.sample.step.sampleQC">
			<!-- Wait for QC result to be notified. If failed abandon this sample flow otherwise sample ready -->
			<!-- for library making -->
			<batch:tasklet>
				<bean parent="abstractSampleListeningTasklet" scope="step">
					<property name="messageToListenFor">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.SampleStatusMessageTemplate">
							<constructor-arg name="sampleId" value="#{jobParameters[waspJobParameters.SAMPLE_ID]}" />
							<property name="task" value="#{sampleTasks.QC}" />
							<property name="status" value="COMPLETED" />
						</bean>
					</property>
					<property name="name" value="wasp.sample.step.sampleQC" />
				</bean>
			</batch:tasklet>
			<batch:next on="FAILED" to="wasp.sample.step.notifySampleAbandoned" />
			<batch:next on="COMPLETED" to="wasp.sample.step.notifySampleAccepted" />
			<batch:fail on="*" /> <!-- unexpected message -->
		</batch:step>
		<batch:step id="wasp.sample.step.notifySampleAccepted">
			<!-- publish that sample is ready for further processing -->
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.SampleStatusMessageTemplate">
							<constructor-arg  name="sampleId" value="#{jobParameters[waspJobParameters.SAMPLE_ID]}"/>
							<property name="status" value="ACCEPTED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
		<batch:step id="wasp.sample.step.notifySampleAbandoned">
			<!-- publish that sample had been abandoned  -->
			<batch:tasklet>
				<bean class="edu.yu.einstein.wasp.daemon.batch.tasklets.NotifyStatusTasklet" scope="step">
					<constructor-arg name="outputMessageChannel" ref="wasp.channel.batch" />
					<constructor-arg name="messageTemplate">
						<bean class="edu.yu.einstein.wasp.integration.messages.templates.SampleStatusMessageTemplate">
							<constructor-arg  name="sampleId" value="#{jobParameters[waspJobParameters.SAMPLE_ID]}"/>
							<property name="status" value="ABANDONED" />
						</bean>
					</constructor-arg>
				</bean>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
</beans>
