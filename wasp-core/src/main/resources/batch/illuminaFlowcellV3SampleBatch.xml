<?xml version="1.0" encoding="UTF-8"?>
<beans
    xsi:schemaLocation=" http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans.xsd     
  http://www.springframework.org/schema/integration
  http://www.springframework.org/schema/integration/spring-integration.xsd
  http://www.springframework.org/schema/batch 
  http://www.springframework.org/schema/batch/spring-batch.xsd
  "
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:batch="http://www.springframework.org/schema/batch" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:si="http://www.springframework.org/schema/integration" 
    xmlns="http://www.springframework.org/schema/beans"
    default-autowire="byName">

  <bean id="illuminaFlowcellV3.sample.Poller" parent="wasp.sample.Poller">
    <property name="sampleSubtypeIName" value="illuminaFlowcellV3"/>
    <property name="taskIName" value="sampleWrapTask"/>
  </bean>

  <si:inbound-channel-adapter ref="illuminaFlowcellV3.sample.Poller" method="getStates" channel="illuminaFlowcellV3.sample.Channel">
    <si:poller fixed-rate="20000"/>
  </si:inbound-channel-adapter>

  <si:service-activator input-channel="illuminaFlowcellV3.sample.Channel" output-channel="wasp.logger">
    <bean class="edu.yu.einstein.wasp.batch.launcher.StateJobLaunchingMessageHandler" scope="prototype">
       <constructor-arg ref="jobRegistry" />
       <constructor-arg ref="jobLauncher" />
       <constructor-arg ref="jobRepository" />
       <constructor-arg ref="jobOperator" />
       <constructor-arg type="java.lang.String"><value>illuminaFlowcellV3.sample.Job</value></constructor-arg>
    </bean>
  </si:service-activator>


  <!-- PlaceIllumina -->
  <bean id="illuminaFlowcellV3.sample.PlaceIlluminaStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.CreateSampleStateProcessor">
        <property name="targetTask" value="placeIllumina" />
      </bean>
    </property>
  </bean>

  <bean id="illuminaFlowcellV3.sample.PlaceIlluminaPlacedStateStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.WaitForSiblingSampleStateProcessor">
        <property name="task" value="placeIllumina" />
        <property name="status" value="COMPLETED" />
        <property name="siblingTargetStatus" value="FINALIZED" />
      </bean>
    </property>
  </bean>

  <batch:flow id="illuminaFlowcellV3.sample.PlaceIlluminaFlow">
    <batch:step id="illuminaFlowcellV3.sample.PlaceIlluminaStep0" parent="illuminaFlowcellV3.sample.PlaceIlluminaStateStep" next="illuminaFlowcellV3.sample.PlaceIlluminaStep1" />
    <batch:step id="illuminaFlowcellV3.sample.PlaceIlluminaStep1" parent="illuminaFlowcellV3.sample.PlaceIlluminaPlacedStateStep"  next="illuminaFlowcellV3.sample.PlaceIlluminaStep2" />

    <!-- proceed when child run is done --> 
    <batch:step id="illuminaFlowcellV3.sample.PlaceIlluminaStep2" parent="wasp.default.WaitForChildrenFinalStep" />
  </batch:flow>

  <!-- /PlaceIllumina -->

  <!-- GetResults -->

  <bean id="illuminaFlowcellV3.sample.GetResultsStep" parent="parentStateStep">
    <property name="itemProcessor">
      <bean class="edu.yu.einstein.wasp.batch.WaitForSampleFileProcessor">
        <property name="filenameRegex" value=".*\.completed.txt" />
      </bean>
    </property>
  </bean>

  <batch:flow id="illuminaFlowcellV3.sample.GetResultsFlow">
    <batch:step id="illuminaFlowcellV3.sample.GetResultsFlow0" parent="illuminaFlowcellV3.sample.GetResultsStep" />
  </batch:flow>

  <!-- /getResults -->



  <batch:job id="illuminaFlowcellV3.sample.Job">
    <batch:flow id="illuminaFlowcellV3.sample.Job0" parent="wasp.sample.ReceiveFlow" next="illuminaFlowcellV3.sample.Job1" />
    <batch:flow id="illuminaFlowcellV3.sample.Job1" parent="wasp.sample.LibraryPlatformUnitAssignFlow" next="illuminaFlowcellV3.sample.Job2" />

    <!-- send to sequencer -->

    <batch:flow id="illuminaFlowcellV3.sample.Job2" parent="illuminaFlowcellV3.sample.PlaceIlluminaFlow" next="illuminaFlowcellV3.sample.Job3" />

    <batch:flow id="illuminaFlowcellV3.sample.Job3" parent="illuminaFlowcellV3.sample.GetResultsFlow" next="illuminaFlowcellV3.sample.Job4" />


    <!-- update library status -->

    <batch:flow id="illuminaFlowcellV3.sample.Job4" parent="wasp.default.FinalFlow" />
  </batch:job>

</beans>
