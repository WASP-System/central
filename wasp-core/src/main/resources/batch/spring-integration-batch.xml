<?xml version="1.0" encoding="UTF-8"?>
<beans
    xsi:schemaLocation=" http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans.xsd     
  http://www.springframework.org/schema/context  
  http://www.springframework.org/schema/context/spring-context.xsd 
  http://www.springframework.org/schema/mvc 
  http://www.springframework.org/schema/mvc/spring-mvc.xsd   
  http://www.springframework.org/schema/aop 
  http://www.springframework.org/schema/aop/spring-aop.xsd
  http://www.springframework.org/schema/tx
  http://www.springframework.org/schema/tx/spring-tx.xsd
  http://www.springframework.org/schema/integration
  http://www.springframework.org/schema/integration/spring-integration.xsd
  http://www.springframework.org/schema/integration/file
  http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
  http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:si="http://www.springframework.org/schema/integration" 
    xmlns:file="http://www.springframework.org/schema/integration/file"
    xmlns:http="http://www.springframework.org/schema/integration/http" 
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:task="http://www.springframework.org/schema/task"
    default-autowire="byName">

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="isolationLevelForCreate" value="ISOLATION_DEFAULT" />
    </bean>

    <bean id="simpleTaskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor">
        <property name="concurrencyLimit" value="100" />
    </bean>

    <task:executor id="pooledTaskExecutor" pool-size="90-95" queue-capacity="6" />
<bean id="te" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
<property name="corePoolSize" value="5" />
<property name="maxPoolSize" value="5" />
</bean>

  <!-- for <batch:split> an parallel action -->
  <bean id="asyncTaskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />


    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
      <property name="jobRepository" ref="jobRepository" />
      <property name="taskExecutor" ref="asyncTaskExecutor" />
    </bean>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

    <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
        <property name="jobRegistry" ref="jobRegistry" />
    </bean>


    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator" p:jobLauncher-ref="jobLauncher" p:jobExplorer-ref="jobExplorer"
        p:jobRepository-ref="jobRepository" p:jobRegistry-ref="jobRegistry" />

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean" p:dataSource-ref="dataSource" />

    <bean id="environment" class="org.springframework.batch.support.SystemPropertyInitializer">
        <property name="defaultValue" value="mysql" />
        <property name="keyName" value="ENVIRONMENT" />
    </bean>

    <!-- Use this to set additional properties on beans at run time -->
    <bean id="overrideProperties" class="org.springframework.beans.factory.config.PropertyOverrideConfigurer" depends-on="environment">
        <property name="location" value="classpath:batch-mysql.properties" />
        <!-- Allow system properties (-D) to override those from file -->
        <property name="localOverride" value="true" />
        <property name="properties">
            <bean class="java.lang.System" factory-method="getProperties" />
        </property>
        <property name="ignoreInvalidKeys" value="true" />
        <property name="order" value="2" />
    </bean>

    <bean id="placeholderProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" depends-on="environment">
        <property name="location" value="classpath:batch-mysql.properties" />
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="order" value="1" />
    </bean>

    <bean id="sequenceIncrementerParent" class="org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer" abstract="true">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="columnIncrementerParent" class="org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer" abstract="true" parent="sequenceIncrementerParent">
        <property name="columnName" value="ID" />
    </bean>

    <bean id="incrementerParent" parent="columnIncrementerParent">
        <property name="incrementerName" value="DUMMY" />
    </bean>
    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />
    
    <!-- AOP -->
    
    <!-- AOP advice to restart tasklets with name pattern RetryableTasklet.java -->
    <aop:config>
        <aop:pointcut id="batchJobRetry"
                      expression=" execution(* *..*RetryableTasklet.execute(..))  "/>
        <aop:advisor pointcut-ref="batchJobRetry" advice-ref="retryAdvice" order="-1"/>
    </aop:config>

    <bean id="retryAdvice"
                class="org.springframework.batch.retry.interceptor.RetryOperationsInterceptor">
        <property name="retryOperations">
            <bean class="org.springframework.batch.retry.support.RetryTemplate">
                <property name="retryPolicy">
                    <bean class="org.springframework.batch.retry.policy.AlwaysRetryPolicy" />
                </property>
                <property name="backOffPolicy">
                    <bean class="org.springframework.batch.retry.backoff.FixedBackOffPolicy">
                        <property name="backOffPeriod" value="20000"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
  
    <!--WARNING:UNCOMMENT this if running  the app for the first time.it will create batch utility tables-->
<!--
    <bean id="dataSourceInitializer" class="edu.yu.einstein.wasp.batch.DataSourceInitializer">
        <property name="dataSource" ref="dataSource" />
        <property name="initialize" value="true" />
        <property name="initScripts">
            <list>
                <value>classpath:/org/springframework/batch/core/schema-drop-mysql.sql</value>
                <value>classpath:/org/springframework/batch/core/schema-mysql.sql</value>
            </list>
        </property>
    </bean>
-->
</beans>
