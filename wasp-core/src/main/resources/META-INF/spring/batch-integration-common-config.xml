<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xsi:schemaLocation="http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
		
	<!-- import RMI message sending context -->
	<import resource="integration/RmiMessageSend-context.xml" />

	<!-- import batch common config (required for autowiring JobExplorer etc) -->
	<import resource="batch/batch-common-config.xml" />
  
	<!-- common integration: message sending imports (required for sending messages)-->
	<import resource="integration/message-routing-common-config.xml"/>
  
	<!-- define service activator to handle requests to kick off batch jobs -->
	<int:service-activator input-channel="wasp.channel.queue.launch"  output-channel="wasp.channel.reply" method="launch"  >
		<bean id="batchJobLauncher" class="edu.yu.einstein.wasp.batch.launch.BatchJobLaunchServiceImpl">
			<constructor-arg name="jobLauncher" ref="jobLauncher" />
			<constructor-arg name="jobRegistry" ref="jobRegistry" />
		</bean>
	</int:service-activator>
	
	<int:poller id="defaultPoller" default="true" max-messages-per-poll="1" fixed-rate="10" receive-timeout="30000"/>
	
	<!-- A Gateway will create a temporary point-to-point reply channel which is anonymous and is added to the Message Headers with the name replyChannel. 
    When providing an explicit default-reply-channel (reply-channel with remote adapter gateways), you have the option to point to a publish-subscribe channel, 
    which is so named because you can add more than one subscriber to it. Internally Spring Integration will create a Bridge between the temporary replyChannel 
    and the explicitly defined default-reply-channel. So let's say you want your reply to go not only to the gateway, but also to some other consumer. 
    In this case you would want two things: a) a named channel you can subscribe to and b) that channel is a publish-subscribe-channel. 
    The default strategy used by the gateway will not satisfy those needs, because the reply channel added to the header is anonymous and point-to-point. 
    This means that no other subscriber can get a handle to it and even if it could, the channel has point-to-point behavior such that only one subscriber 
    would get the Message. So by defining a default-reply-channel you can point to a channel of your choosing, which in this case would be a 
    publish-subscribe-channel. The Gateway would create a bridge from it to the temporary, anonymous reply channel that is stored in the header. -->
    <int:publish-subscribe-channel id="wasp.channel.reply" >
    	<int:interceptors>
	    	<int:wire-tap channel="wasp.channel.defaultLogging" />
	    </int:interceptors>
    </int:publish-subscribe-channel>
	

</beans>
