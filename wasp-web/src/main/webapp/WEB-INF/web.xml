<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
      version="3.0">

	<!-- Filter that binds a JPA EntityManager to the thread for the entire processing of the request. Intended for the "Open EntityManager in View" pattern, i.e. to allow for lazy loading in web views despite the original transactions already being completed. -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>entityManagerFactoryBeanName</param-name>
			<!-- <param-value>entityManagerFactory</param-value> -->
			<param-value>entityManagerFactory</param-value>
		</init-param>

		<!-- <init-param> <param-name>singleSession</param-name> <param-value>true</param-value> 
			</init-param> <init-param> <param-name>flushMode</param-name> <param-value>AUTO</param-value> 
			</init-param> -->
	</filter>

	<filter-mapping>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.properties</param-value>
	</context-param>

	<context-param>
		<param-name>log4jExposeWebAppRoot</param-name>
		<param-value>false</param-value>
	</context-param>


	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
      /WEB-INF/spring/web-application-context.xml
    </param-value>
	</context-param>

	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<async-supported>true</async-supported>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- <filter> <filter-name>encoding-filter</filter-name> <filter-class> 
		org.springframework.web.filter.CharacterEncodingFilter </filter-class> <init-param> 
		<param-name>encoding</param-name> <param-value>UTF-8</param-value> </init-param> 
		</filter> <filter-mapping> <filter-name>encoding-filter</filter-name> <url-pattern>/*</url-pattern> 
		</filter-mapping> -->

	<servlet>
		<servlet-name>wasp</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>

	<servlet-mapping>
		<servlet-name>wasp</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>	

	<filter>
		<filter-name>shallowEtagHeaderFilter</filter-name>
		<filter-class>org.springframework.web.filter.ShallowEtagHeaderFilter</filter-class>
		<async-supported>true</async-supported>
	</filter>
	<filter>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
		<async-supported>true</async-supported>
	</filter>

	<servlet>
		<servlet-name>StickyCaptcha</servlet-name>
		<servlet-class>nl.captcha.servlet.StickyCaptchaServlet</servlet-class>
		<!-- The width and height params are optional; if unspecified they default 
			to 200 and 50 respectively. -->
		<init-param>
			<param-name>width</param-name>
			<param-value>150</param-value>
		</init-param>
		<init-param>
			<param-name>height</param-name>
			<param-value>50</param-value>
		</init-param>
		<async-supported>true</async-supported>
	</servlet>

	<servlet-mapping>
		<servlet-name>StickyCaptcha</servlet-name>
		<url-pattern>/stickyCaptchaImg.png</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>/auth/login.do</welcome-file>
	</welcome-file-list>

</web-app>
